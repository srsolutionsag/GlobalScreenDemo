<?php

/* Copyright (c) 1998-2009 ILIAS open source, Extended GPL, see https://github.com/ILIAS-eLearning/ILIAS/tree/trunk/docs/LICENSE */

use ILIAS\GlobalScreen\Scope\MainMenu\Provider\AbstractStaticPluginMainMenuProvider;

require_once __DIR__ . "/../vendor/autoload.php";

/**
 * Class ilGlobalScreenDemoPlugin
 *
 * Generated by srag\PluginGenerator v0.9.18
 *
 * @author studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 * @author studer + raimann ag - Team Core 1 <support-core1@studer-raimann.ch>
 */
class ilGlobalScreenDemoPlugin extends ilEventHookPlugin {

	const PLUGIN_ID = "gsdemo";
	const PLUGIN_NAME = "GlobalScreenDemo";
	const PLUGIN_CLASS_NAME = self::class;
	const REMOVE_PLUGIN_DATA_CONFIRM_CLASS_NAME = GlobalScreenDemoRemoveDataConfirm::class;
	/**
	 * @var self|null
	 */
	protected static $instance = null;


	/**
	 * @return self
	 */
	public static function getInstance(): self {
		if (self::$instance === null) {
			self::$instance = new self();
		}

		return self::$instance;
	}


	/**
	 * ilGlobalScreenDemoPlugin constructor
	 */
	public function __construct() {
		parent::__construct();
	}


	/**
	 * @return string
	 */
	public function getPluginName(): string {
		return self::PLUGIN_NAME;
	}


	/**
	 * This is the relevant Method in every Plugin to provide your own MainMenu-Items-Provider.
	 * You MUST extend from the AbstractStaticPluginMainMenuProvider.
	 *
	 * @see ilGSDProvider
	 *
	 * @return AbstractStaticPluginMainMenuProvider
	 */
	public function promoteGlobalScreenProvider(): AbstractStaticPluginMainMenuProvider {
		global $DIC;

		return new ilGSDProvider($DIC, $this);
	}


	/**
	 * Why the heck we provide a EventHook-Plugin to demonstrate the possibilities
	 * of the GlobalScreen-Service in Plugins? Just to show that every Plugin-Type
	 * is capable of this and not just UIHook-Plugins.
	 *
	 * We just listen to the crete-Events for ILIAS-Objects and count them in
	 * the current Session. This counter is the used in @see ilGSDCountCreatedObjects
	 *
	 * @param string $a_component
	 * @param string $a_event
	 * @param array  $a_parameter
	 */
	public function handleEvent(/*string*/
		$a_component, /*string*/
		$a_event,/*array*/
		$a_parameter
	)/*: void*/ {
		if ($a_component === "Services/Object" && $a_event === "create") {
			$counter = (int)ilSession::get('xdemo_created_objects');
			$counter++;
			ilSession::set('xdemo_created_objects', $counter);
		}
	}
}
